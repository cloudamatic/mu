image: ruby:2.5

stages:
  - Lint Test
  - Test
  - Security Test
  - Build
  - Smoke Test
  - Merge/Tag
  - Dockerbuild
  - Deploy
  
# Rubocop:
#   stage: Lint Test
#   image: chef/chefdk:latest
#   script:
#     - rubocop modules/
#     - rubocop bin/
#   allow_failure: true

# Cookstyle:
#   stage: Lint Test
#   image: chef/chefdk:latest
#   script:
#     - cookstyle cookbooks/
#   allow_failure: true

# Foodcritic:
#   stage: Lint Test
#   image: chef/chefdk:latest
#   script:
#     - foodcritic cookbooks/ -t ~FC075 -t ~FC015 -t ~FC034 -t ~FC122

# Foodcritic Deprecations:
#   stage: Lint Test
#   image: chef/chefdk:latest
#   script:
#     - foodcritic cookbooks/ -t deprecated -t chef13 -t chef14 -t chef15

# ChefSpec:
#   stage: Test
#   image: chef/chefdk:latest
#   script:
#     - for d in ./cookbooks/*/ ; do (cd "$d" && chef exec rspec); done
#   allow_failure: true

# Rspec:
#   stage: Test
#   script:
#     - cd modules
#     - bundle install
#     - gem install rspec
#     - cd ../
#     - rspec
#   allow_failure: true

# New_Berks:
#   stage: Test
#   image: chef/chefdk:latest
#   script:
#     - apt-get -qq update
#     - apt-get -qq install git -y
#     - for d in ./cookbooks/*/ ; do (echo && echo "Installing $d" && cd "$d" && berks install); done
#     - for d in ./cookbooks/*/ ; do (echo && echo "Verifying $d" && cd "$d" && berks verify); done
#     - for d in ./cookbooks/*/ ; do (echo && echo "Analyzing $d" && cd "$d" && berks outdated); done
  
# Berks:
#   stage: Test
#   image: chef/chefdk:latest
#   script:
#     - apt-get -qq update
#     - apt-get -qq install git -y
#     - rm -rf Berksfile.lock
#     - berks install
#     - berks verify
#     - berks outdated

# .BrakeMan:
#   stage: Security Test
#   image: codeclimate/codeclimate-brakeman:latest
#   script:
#     - echo "BrakeMan!"

Gem Build:
  stage: Build
  script:
    - gem build cloud-mu.gemspec
    - gem install cloud-mu-*.gem
    - echo "Upload me places? Pehaps to rubygems?"
  only:
    - master
    - development
    - cicd_updates
  artifacts:
    paths:
    - cloud-mu-*.gem

# Muby Build:
#   stage: Build
#   image: centos
#   script: 
#     - yum -y groupinstall 'Development Tools'
#     - yum -y install rpm-build
#     #- yum -y install zlib zlib-devel openssl #THESE SHOULD BE LISTED IN THE .spec FILE
#     - yum-builddep -y extras/ruby_rpm/muby.spec
#     - /usr/bin/rpmbuild -ba extras/ruby_rpm/muby.spec
#     - echo "maybe do something cool and smart here?"
#   only:
#     - master
#     - cicd_updates
#   allow_failure: true

Parser Test:
  stage: Smoke Test
  script:
    - curl https://gist.githubusercontent.com/ryantiger658/87ee6aca72802ce55211a7e6c6bfa76f/raw/aaa54c255936dcb7495b6befeababd44c162922d/.mu.yaml >> /root/.mu.yaml
    - gem install cloud-mu-*.gem
    - mu-deploy -d modules/tests/super_simple_bok.yml
    - mu-deploy -d modules/tests/super_complex_bok.yml
  dependencies:
  - Gem Build
  # tags: 
  #   - mu-master
  only:
    - master
    - development
    - cicd_updates
  allow_failure: true

# Smoke Test:
#   stage: Smoke Test
#   script:
#     - mu-upload-chef-artifacts -sn
#     - mu-deploy /opt/mu/var/demo_platform/applications/gitlab-server.yml -p vpc_id=vpc-040da43493f894a8d
#   tags: 
#     - mu-master
#   only:
#     - master
#     - development
#   when: manual

# Merge/Tag:
#   stage: Merge/Tag
#   script:
#     - echo "Merge and tag here"
#   only:
#     - master
#     - development

# Dockerbuild:
#   stage: Dockerbuild
#   image: docker:latest
#   script:
#     - echo "Build Mu Docker Container"
#   only:
#     - master
#     - development

pages:
  stage: Deploy
  script:
  - printenv
  - curl https://gist.githubusercontent.com/ryantiger658/87ee6aca72802ce55211a7e6c6bfa76f/raw/aaa54c255936dcb7495b6befeababd44c162922d/.mu.yaml >> /root/.mu.yaml
  - mkdir /usr/local/bin/yard
  - chmod 777 /usr/local/bin/yard -R
  - gem install cloud-mu-*.gem
  - ruby bin/mu-gen-docs
  - mkdir public
  dependencies:
  - Gem Build
  artifacts:
    paths:
    - public
  only:
  - master
  - cicd_updates

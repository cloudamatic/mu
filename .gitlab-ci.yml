image: ruby:2.5

stages:
  - Lint Test
  - Test
  - Security Test
  - Build
  - Smoke Test
  - Merge/Tag
  - Dockerbuild
  - Deploy
  
Rubocop:
  stage: Lint Test
  image: chef/chefdk:latest
  script:
    - rubocop modules/
    - rubocop bin/
  allow_failure: true
  except:
    variables:
    - $IMAGE_BUILD

Cookstyle:
  stage: Lint Test
  image: chef/chefdk:latest
  script:
    - cookstyle cookbooks/
  allow_failure: true
  except:
    variables:
    - $IMAGE_BUILD

Foodcritic:
  stage: Lint Test
  image: chef/chefdk:latest
  script:
    - foodcritic cookbooks/ -t ~FC075 -t ~FC015 -t ~FC034 -t ~FC122 -X firewall/*
  except:
    variables:
    - $IMAGE_BUILD

Foodcritic Deprecations:
  stage: Lint Test
  image: chef/chefdk:latest
  script:
    - foodcritic cookbooks/ -t deprecated -t chef13 -t chef14 -t chef15 -X cokbooks/firewall/*
  except:
    variables:
    - $IMAGE_BUILD

ChefSpec:
  stage: Test
  image: chef/chefdk:latest
  script:
    - for d in ./cookbooks/*/ ; do (cd "$d" && chef exec rspec); done
  allow_failure: true
  except:
    variables:
    - $IMAGE_BUILD

.Rspec:
  stage: Test
  before_script:
    - cat spec/azure_creds | sed -e "s/__AZURE_CLIENT_ID__/${AZURE_CLIENT_ID}/" > spec/azure_creds.tmp
    - cp spec/azure_creds.tmp spec/azure_creds
    - cat spec/azure_creds | sed -e "s/__AZURE_CLIENT_SECRET__/${AZURE_CLIENT_SECRET}/" > spec/azure_creds.tmp
    - cp spec/azure_creds.tmp spec/azure_creds
    - cat spec/mu.yaml | sed -e "s/__AZURE_DIRECTORY_ID__/${AZURE_CLIENT_SECRET}/" > spec/mu.yaml.tmp
    - cp spec/mu.yaml.tmp spec/mu.yaml
    - cat spec/mu.yaml | sed -e "s/__AZURE_CLIENT_SECRET__/${AZURE_CLIENT_SECRET}/" > spec/mu.yaml.tmp
    - cp spec/mu.yaml.tmp spec/mu.yaml
  script:
    - cd modules
    - bundle install
    - gem install rspec simplecov simplecov-console
    - cd ../
    - rspec
  after_script:
    - shred -u spec/azure_creds
    - shred -u spec/azure_creds.tmp
    - shred -u spec/mu.yaml
    - shred -u spec/mu.yaml.tmp
  allow_failure: true
  except:
    variables:
    - $IMAGE_BUILD

New_Berks:
  stage: Test
  image: chef/chefdk:latest
  script:
    - apt-get -qq update
    - apt-get -qq install git -y
    - for d in `ls -1 ./cookbooks | grep -v '^firewall$'` ; do (echo && echo "Installing $d" && cd "cookbooks/$d" && berks install); done
    - for d in `ls -1 ./cookbooks | grep -v '^firewall$'` ; do (echo && echo "Verifying $d" && cd "cookbooks/$d" && berks verify); done
    - for d in `ls -1 ./cookbooks | grep -v '^firewall$'` ; do (echo && echo "Analyzing $d" && cd "cookbooks/$d" && berks outdated); done
  except:
    variables:
    - $IMAGE_BUILD
  
Berks:
  stage: Test
  image: chef/chefdk:latest
  script:
    - apt-get -qq update
    - apt-get -qq install git -y
    - rm -rf Berksfile.lock
    - berks install
    - berks verify
    - berks outdated
  except:
    variables:
    - $IMAGE_BUILD

Gem Build:
  stage: Build
  script:
    - gem build cloud-mu.gemspec
  only:
    - master
    - development
    - gen_docs
    - /^gem-.*$/
    - /^cicd-.*$/
  artifacts:
    paths:
    - cloud-mu-*.gem
  except:
    variables:
    - $IMAGE_BUILD

.Muby Build:
  stage: Build
  image: centos
  script: 
    - yum -y groupinstall 'Development Tools'
    - yum -y install rpm-build
    - yum-builddep -y extras/ruby_rpm/muby.spec
    - /usr/bin/rpmbuild -ba extras/ruby_rpm/muby.spec
    - echo "maybe do something cool and smart here?"
  only:
    - master
    - development
  allow_failure: true
  except:
    variables:
    - $IMAGE_BUILD

Gem Parser Test:
  stage: Smoke Test
  script:
    - curl https://gist.githubusercontent.com/ryantiger658/87ee6aca72802ce55211a7e6c6bfa76f/raw/aaa54c255936dcb7495b6befeababd44c162922d/.mu.yaml >> /root/.mu.yaml
    - gem install cloud-mu-*.gem
    - mu-deploy -d modules/tests/super_simple_bok.yml
    - mu-deploy -d modules/tests/super_complex_bok.yml
  dependencies:
  - Gem Build
  only:
    - master
    - development
    - /^gem-.*$/
    - /^cicd-.*$/
  allow_failure: true
  except:
    variables:
    - $IMAGE_BUILD

Test Kitchen:
  stage: Smoke Test
  image: chef/chefdk:latest
  script:
  - apt-get -qq update
  - apt-get -qq -y install python3-setuptools
  - pip install awscli
  - kitchen test
  - kitchen create
  - kitchen converge mu-install-amazon2
  - kitchen destroy
  only:
  - master
  - development
  - mess_with_test_kitchen

Smoke Test:
  stage: Smoke Test
  script:
  - mu-upload-chef-artifacts -sn
  - mu-deploy /opt/mu/var/demo_platform/applications/gitlab-server.yml -p vpc_id=vpc-040da43493f894a8d
  tags: 
  - mu-master
  only:
  - master
  - development
  when: manual
  except:
    variables:
    - $IMAGE_BUILD

.Dockerbuild:
  stage: Dockerbuild
  image: docker:latest
  script:
    - echo "Build Mu Docker Container"
  only:
    - master
    - development
  except:
    variables:
    - $IMAGE_BUILD

Gen Docs:
  stage: Merge/Tag
  script:
  - curl https://gist.githubusercontent.com/ryantiger658/87ee6aca72802ce55211a7e6c6bfa76f/raw/aaa54c255936dcb7495b6befeababd44c162922d/.mu.yaml >> /root/.mu.yaml
  - gem install cloud-mu-*.gem
  - ruby bin/mu-gen-docs
  - mkdir public
  - cp -Rf /var/www/html/docs/* public
  - ls public
  dependencies:
  - Gem Build
  only:
  - master
  - development
  - gen_docs
  artifacts:
    paths:
    - public/
  except:
    variables:
    - $IMAGE_BUILD

.GitHub Pages:
  stage: Deploy
  image: bitnami/git:latest
  script:
  - echo "Hello I am going to push to GitHub"
  - ssh-keyscan -H github.com >> ~/.ssh/known_hosts
  - git clone git@github.com:cloudamatic/cloudamatic.github.io.git
  - cp -Rf public/* cloudamatic.github.io
  - cd cloudamatic.github.io
  - git status
  - git add -a
  - git commit -m "$CI_COMMIT_MESSAGE"
  - git push origin master
  dependencies:
  - Gen Docs
  only:
  - master
  - gen_docs
  allow_failure: true
  except:
    variables:
    - $IMAGE_BUILD

Upload Gem:
  stage: Deploy
  script:
  - mkdir ~/.gem
  - cat .gitlab-ci/gem_credentials | sed -e "s/__RUBYGEMS_API_KEY__/${RUBYGEMS_API_KEY}/" > ~/.gem/credentials
  - chmod 0600 ~/.gem/credentials
  - gem push cloud-mu-*.gem
  - shred -u ~/.gem/credentials
  when: on_success
  dependencies:
  - Gem Build
  only:
  - master
  except:
    variables:
    - $IMAGE_BUILD

Upload Gem Manual:
  stage: Deploy
  script:
  - mkdir ~/.gem
  - cat .gitlab-ci/gem_credentials | sed -e "s/__RUBYGEMS_API_KEY__/${RUBYGEMS_API_KEY}/" > ~/.gem/credentials
  - chmod 0600 ~/.gem/credentials
  - gem push cloud-mu-*.gem
  - shred -u ~/.gem/credentials
  dependencies:
  - Gem Build
  when: manual
  only:
  - development
  - /^gem-.*$/
  - /^cicd-.*$/
  except:
    variables:
    - $IMAGE_BUILD

pages:
  stage: Deploy
  script:
  - ls public
  dependencies:
  - Gen Docs
  artifacts:
    paths:
    - public
  only:
  - master
  - gen_docs
  except:
    variables:
    - $IMAGE_BUILD

Base Images Linux:
  stage: Deploy
  script:
  - /opt/mu/lib/extras/generate-stock-images --clouds AWS --aws-creds egtprod --platforms centos6 centos7 rhel7
  tags:
  - mu-gitlab-runner
  only:
    variables:
    - $IMAGE_BUILD == "do_linux"

Base Images Windows:
  stage: Deploy
  script:
  - /opt/mu/lib/extras/generate-stock-images --clouds AWS --aws-creds egtprod --platforms win2k12 win2k16
  tags:
  - mu-gitlab-runner
  only:
    variables:
    - $IMAGE_BUILD == "do_windows"

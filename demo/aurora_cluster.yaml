appname: aurora
parameters:
- name: vpc_deploy_id
  required: false
  description: The Mu deploy identifier for an existing deploy with a single VPC, into which we'll attempt to insert this deployment.
- name: vpc_name
  default: vpc
  description: Use this parameter to specify a Mu resource name other than 'vpc' when also setting 'vpc_deploy_id.'
- name: vpc_id
  cloudtype: AWS::EC2::VPC::Id
  description: A simple VPC cloud id into which we'll attempt to insert this deployment.
  default: <%= MU.myVPC %>
databases:
- name: cluster
  dns_sync_wait: false
  alarms:
  - name: cpu-usage
    metric_name: CPUUtilization
    statistic: Average
    period: 60
    evaluation_periods: 2
    threshold: 60
    comparison_operator: GreaterThanOrEqualToThreshold
    enable_notifications: false
  - name: connections
    metric_name: DatabaseConnections
    statistic: Average
    period: 60
    unit: Count
    evaluation_periods: 2
    threshold: 20
    comparison_operator: GreaterThanOrEqualToThreshold
    enable_notifications: false
  engine_version: 5.6.10a
  create_cluster: true
  cluster_node_count: 3
  parameter_group_family: aurora5.6
  engine: aurora
  publicly_accessible: true
  size: db.t2.small
  port: 3306
  backup_retention_period: 35
  add_firewall_rules: 
  - rule_name: dbcluster
  vpc:
    vpc_name: <%= vpc_name %>
    <% if parameter?('vpc_deploy_id') %>
    deploy_id: <%= vpc_deploy_id %>
    <% elsif parameter?('vpc_id') %>
    vpc_id: <%= vpc_id %>
    <% end %>
    subnet_pref: all_public

firewall_rules:
- name: dbcluster
  vpc:
    vpc_name: <%= vpc_name %>
    <% if parameter?('vpc_deploy_id') %>
    deploy_id: <%= vpc_deploy_id %>
    <% elsif parameter?('vpc_id') %>
    vpc_id: <%= vpc_id %>
    <% end %>
  rules: 
  - port: 3306
    hosts:
    - 0.0.0.0/0
<% if !parameter?('vpc_deploy_id') then %>
vpcs:
<%= include("generic_vpc.inc") %>
servers:
<%= include("generic_bastion.inc") %>
<% end %>

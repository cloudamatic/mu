<%
$azs = MU::Cloud::AWS.listAZs
$azs.delete $azskip if $azskip
current_vpc = MU.myVPC
%>
---
appname: demo-rails
servers:
  -
    name: rails
    ssh_user: ubuntu
    platform: ubuntu
    storage:
      -
        size: 15
    skipinitialupdates: true
    run_list:
      - "recipe[demo::rails]"
      - "recipe[demo::store_attr]"

    size: "t2.micro"
    associate_public_ip: true
    static_ip:
      assign_ip: true
    vpc:
    <% if $vpc_deploy_id %>
      deploy_id: <%= $vpc_deploy_id %>
    <% elsif $use_current %>
      vpc_id: <%= current_vpc %>
    <% else %>
      vpc_name: vpc
    <% end %>
    ingress_rules:
      -
        port: 80
        hosts:
          - "0.0.0.0/0"
    dependencies:
      -
        name: "concerto"
        type: "database"
<% unless $use_current or $vpc_deploy_id then %>
vpcs:
- name: vpc
  route-tables:
  - name: internet
    routes:
    - destination_network: 0.0.0.0/0
      gateway: "#INTERNET"
  subnets:
<% $azs.each.with_index do |az, i| %>
  - name: Subnet<%= i %>Public
    ip_block: 10.0.<%= i %>.0/24
    availability-zone: "<%= az %>"
    route-table: internet
<% end %>
<% end %>
databases:
  -
    name: "concerto"
    engine: "mysql"
    size: "db.t2.micro"
    multi_az_on_deploy: false
    multi_az_on_create: false
    storage: 5
    port: 3306
    vpc:
    <% if $vpc_deploy_id %>
      deploy_id: <%= $vpc_deploy_id %>
      subnet_pref: all_public
    <% elsif $use_current %>
      vpc_id: <%= current_vpc %>
      subnet_pref: all_public
    <% else %>
      vpc_name: vpc
      subnets:
      <% (1..$azs.size).each do |i| %>
        - subnet_name: Subnet<%= i-1 %>Public
      <% end %>
  <% end %>

admins:
  -
    name: "catwoman"
    email: "catwoman@felinesrock.com"

